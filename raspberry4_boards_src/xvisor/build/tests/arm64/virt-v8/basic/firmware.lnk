OUTPUT_FORMAT("elf64-littleaarch64", "elf64-littleaarch64", "elf64-littleaarch64")
OUTPUT_ARCH("aarch64")
ENTRY(_start)

SECTIONS
{
 . = 0x44000000;

 PROVIDE(_code_start = .);
 PROVIDE(_reloc_region_start = .);

 .text :
 {
  *(.entry)
  *(.text)
  . = ALIGN(8);
  _etext = .;
 }

 . = ALIGN(4096);

 .data :
 {
  *(.data)
  . = ALIGN(8);
  _edata = .;
 }

 . = ALIGN(4096);

 .rodata :
 {
  *(.rodata .rodata.*)
  . = ALIGN(8);
  _erodata = .;
 }

 . = ALIGN(4096);

 PROVIDE(_reloc_region_end = .);

 PROVIDE(_zero_region_start = .);

 .bss :
 {
  PROVIDE(_bss_start = .);
  *(.bss)
  . = ALIGN(8);
  _ebss = .;
  PROVIDE(_bss_end = .);
 }

 . = ALIGN(4096);

 .heap :
 {
  PROVIDE(_heap_start = .);
  *(.heap)
  . = . + 4096;
  . = ALIGN(8);
  PROVIDE(_heap_end = .);
 }

 . = ALIGN(4096);

 PROVIDE(_zero_region_end = .);

 .svc_stack :
 {
  PROVIDE(_svc_stack_start = .);
  . = . + 4096;
  . = ALIGN(8);
  PROVIDE(_svc_stack_end = .);
 }

 .usr_stack :
 {
  PROVIDE(_usr_stack_start = .);
  . = . + 4096;
  . = ALIGN(8);
  PROVIDE(_usr_stack_end = .);
 }

 PROVIDE(_code_end = .);
}
