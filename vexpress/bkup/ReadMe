bins  kernel_compile.sh  mount_copy_file.sh  run_qemu_vexpress.sh  uboot_compile.sh  uboot_prompt_load.sh

1. bins has all the images for u-boot, linux, dt and rootfs

2. u-boot checkout: git clone version
	-> use compile command for compiling the u-boot(uboot_compile.sh)
	-> 	VERSION = 2015
		PATCHLEVEL = 10
		SUBLEVEL =
		EXTRAVERSION = -rc3
	-> praveenv@praveenv-vm:~/sambashare/sedna_linux/versatile_2010/vexpress$ arm-none-linux-gnueabi-gcc --version
		arm-none-linux-gnueabi-gcc (Sourcery G++ Lite 2009q1-203) 4.3.3
		Copyright (C) 2008 Free Software Foundation, Inc.
		This is free software; see the source for copying conditions.  There is NO
		warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

3. kernel checkout: git clone version
	-> use compile command for compiling the kernel(kernel_compile.sh)
	-> 	VERSION = 6
		PATCHLEVEL = 9
		SUBLEVEL = 0
		EXTRAVERSION = -rc4
	-> praveenv@praveenv-vm:~/sambashare/sedna_linux/versatile_2010/vexpress$ arm-linux-gnueabihf-gcc --version
	arm-linux-gnueabihf-gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
	Copyright (C) 2019 Free Software Foundation, Inc.
	This is free software; see the source for copying conditions.  There is NO
	warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

4. build filesystem : https://www.youtube.com/watch?v=zygVAaAlWqE
	-> bins/initramfs.img.uboot
	-> 	mkdir -p RAMFS/{bin,dev} 
		cd RAMFS/bin
		cp /bin/busybox .
		"$PWD/busybox" --install .
		cd ..
		cp -a /dev/{null,tty,zero,console} dev
		printf '%s\n' "#! /bin/sh -" "exec /bin/sh" > init
		chmod +x init
		find . | cpio -oHnewc | gzip > ../initramfs.gz
		cd ..
		kvm -kernel kernel.img -initrd initramfs.gz

